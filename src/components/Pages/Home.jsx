import { useState, useEffect } from 'react'
import axios from 'axios'
import qs from 'qs'
import { useNavigate } from 'react-router-dom'
import Categories from './Categories'
import Sort from './Sort'
import Skeleton from '../PizzaBlock/Skeleton'
import PizzaBlock from '../PizzaBlock/PizzaBlock'
import Pagination from '../Pagination/Pagination'
import { useContext } from 'react'
import { MainContext } from '../../App'
import { useDispatch, useSelector } from 'react-redux'
import { setItems, fetchPizzas } from '../../redux/slices/pizzasSlice'

const Home = () => {
  const categoryId = useSelector((state) => state.filter.categoryId) // –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–ø–∏—Å–∞–Ω–æ –≤ Categories
  const sort = useSelector((state) => state.filter.sort.sortProperty) // –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–ø–∏—Å–∞–Ω–æ –≤ Sort
  const currentPage = useSelector((state) => state.filter.currentPage)
  const { value } = useContext(MainContext) // –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–ø—É—Ç–∞ –∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ Search
  const navigate = useNavigate()
  const dispatch = useDispatch()
  const { items, status } = useSelector((state) => state.pizzas) // –Ω–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–µ–π—Ç —Å —Ä–µ–¥–∞–∫—Å–∞. –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∏ –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏

  const getPizzas = async () => {
    const category = categoryId > 0 ? `category=${categoryId}` : '' // —Ñ–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const search = value ? `&search=${value}` : '' // –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–Ω–ø—É—Ç–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ –ø–∏—Ü—Ü—ã, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–¥—Ö–æ–¥—è—Ç –ø–æ–¥ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

    dispatch(
      fetchPizzas({
        category,
        search,
        currentPage,
        sort,
      })
    ) // UPD: —É–±—Ä–∞–ª try/catch —Ç.–∫ –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∏–¥—É—Ç —á–µ—Ä–µ–∑ —Ä–µ–¥–∞–∫—Å –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±—É–¥–µ—Ç –≤ extraReducers
    window.scroll(0, 0) // –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∫—Ä–æ–ª–ª –±—É–¥–µ—Ç –∏–¥—Ç–∏ —Å —Å–∞–º–æ–≥–æ –≤–µ—Ä—Ö–∞.
  }

  useEffect(() => {
    const queryString = qs.stringify({
      categoryId,
      currentPage,
    }) // –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –¥–µ–ª–∞–µ–º —Å—Ç—Ä–æ—á–∫—É.
    navigate(`?${queryString}`) // —Å –ø–æ–º–æ—â—å—é useNavigate –≤—à–∏–≤–∞–µ–º –µ–µ –≤ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É
  }, [categoryId, sort, value, currentPage]) // –∫–æ–≥–¥–∞ –¥–µ–ª–∞–µ–º qs - –≤—Å–µ–≥–¥–∞ –ø–∏—Ö–∞–µ–º –µ–≥–æ –≤ useEffect –∏ —Å–ª–µ–¥–∏–º –∑–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏

  useEffect(() => {
    getPizzas()
  }, [categoryId, sort, value, currentPage]) // –µ—Å–ª–∏ –∫–∞–∫–∞—è-—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ–Ω—è–µ—Ç—Å—è - useEffect —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏—Ç

  const skeletons = [...new Array(9)].map((_, index) => (
    <Skeleton key={index} />
  ))

  const pizzas = items
    // .filter((item) => item.title.toLowerCase().includes(value.toLowerCase())) UPD. –î–∞–Ω–Ω—ã–µ —Ç–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ–º —Å –±—ç–∫–∞
    .map((obj) => <PizzaBlock key={obj.id} {...obj} />)

  return (
    <div className="container">
      <div className="content__top">
        <Categories />
        <Sort />
      </div>
      <h2 className="content__title">–í—Å–µ –ø–∏—Ü—Ü—ã</h2>
      {status === 'error' ? (
        <>
          <h2>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üòï</h2>
          <p>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–∏—Ü—Ü—ã</p>
        </>
      ) : (
        <div className="content__items">
          {status === 'loading'
            ? skeletons //  –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ undef , –∏ –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –µ–≥–æ
            : pizzas}
        </div>
      )}

      <Pagination />
    </div>
  )
}

export default Home
